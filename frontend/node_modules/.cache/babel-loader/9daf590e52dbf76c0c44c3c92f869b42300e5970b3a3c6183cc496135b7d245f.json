{"ast":null,"code":"var _jsxFileName = \"/home/stlt105/my-transaction-dashboard/frontend/src/components/TransactionsBarChart.js\",\n  _s = $RefreshSig$();\n// components/TransactionsBarChart.js\nimport React, { useEffect, useState } from 'react';\nimport { fetchBarChartData } from '../api/TransactionsApi'; // Adjust the import path as necessary\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsBarChart = ({\n  month\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const chartData = await fetchBarChartData(month);\n        setData(chartData);\n      } catch (error) {\n        console.error(\"Error fetching bar chart data:\", error);\n      }\n    };\n    fetchData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.chartContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Price Range Distribution for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n// Styling for the chart container\n_s(TransactionsBarChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = TransactionsBarChart;\nconst styles = {\n  chartContainer: {\n    marginBottom: '20px',\n    padding: '15px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: '#f9f9f9',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n  }\n};\nexport default TransactionsBarChart;\nvar _c;\n$RefreshReg$(_c, \"TransactionsBarChart\");","map":{"version":3,"names":["React","useEffect","useState","fetchBarChartData","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","TransactionsBarChart","month","_s","data","setData","fetchData","chartData","error","console","style","styles","chartContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","_c","marginBottom","padding","border","borderRadius","backgroundColor","boxShadow","$RefreshReg$"],"sources":["/home/stlt105/my-transaction-dashboard/frontend/src/components/TransactionsBarChart.js"],"sourcesContent":["// components/TransactionsBarChart.js\nimport React, { useEffect, useState } from 'react';\nimport { fetchBarChartData } from '../api/TransactionsApi'; // Adjust the import path as necessary\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\n\nconst TransactionsBarChart = ({ month }) => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const chartData = await fetchBarChartData(month);\n                setData(chartData);\n            } catch (error) {\n                console.error(\"Error fetching bar chart data:\", error);\n            }\n        };\n\n        fetchData();\n    }, [month]);\n\n    return (\n        <div style={styles.chartContainer}>\n            <h3>Price Range Distribution for {month}</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"range\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\n// Styling for the chart container\nconst styles = {\n    chartContainer: {\n        marginBottom: '20px',\n        padding: '15px',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        backgroundColor: '#f9f9f9',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    },\n};\n\nexport default TransactionsBarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}