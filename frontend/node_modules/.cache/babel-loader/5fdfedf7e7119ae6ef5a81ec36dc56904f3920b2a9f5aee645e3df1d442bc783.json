{"ast":null,"code":"var _jsxFileName = \"/home/stlt105/my-transaction-dashboard/frontend/src/components/TransactionsStatistics.js\",\n  _s = $RefreshSig$();\n// components/TransactionsStatistics.js\nimport React, { useEffect, useState } from 'react';\nimport { fetchStatistics } from '../api/TransactionsApi'; // Import the API function\nimport './TransactionsStatistics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsStatistics = ({\n  month\n}) => {\n  _s();\n  const [statistics, setStatistics] = useState({\n    totalSaleAmount: 0,\n    totalSoldItems: 0,\n    totalNotSoldItems: 0\n  });\n  useEffect(() => {\n    const fetchAndSetStatistics = async () => {\n      if (month) {\n        try {\n          const monthNumber = new Date(Date.parse(month + \" 1, 2021\")).getMonth() + 1;\n          console.log(\"Fetching statistics for month number:\", monthNumber);\n          const data = await fetchStatistics(monthNumber); // Use the API function\n          console.log(\"Fetched statistics:\", data);\n\n          // Update state with fetched data\n          setStatistics({\n            totalSaleAmount: data.totalSaleAmount,\n            totalSoldItems: data.totalSoldItems,\n            totalNotSoldItems: data.totalNotSoldItems\n          });\n        } catch (error) {\n          console.error(\"Error fetching statistics:\", error);\n        }\n      }\n    };\n    fetchAndSetStatistics();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Transaction Statistics for \", month || 'Selected Month']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Sale Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this), \" $\", statistics.totalSaleAmount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Sold Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this), \" \", statistics.totalSoldItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Not Sold Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }, this), \" \", statistics.totalNotSoldItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionsStatistics, \"dXYl5I5XdApbDTz4/MEqRjO5EYk=\");\n_c = TransactionsStatistics;\nexport default TransactionsStatistics;\nvar _c;\n$RefreshReg$(_c, \"TransactionsStatistics\");","map":{"version":3,"names":["React","useEffect","useState","fetchStatistics","jsxDEV","_jsxDEV","TransactionsStatistics","month","_s","statistics","setStatistics","totalSaleAmount","totalSoldItems","totalNotSoldItems","fetchAndSetStatistics","monthNumber","Date","parse","getMonth","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/home/stlt105/my-transaction-dashboard/frontend/src/components/TransactionsStatistics.js"],"sourcesContent":["// components/TransactionsStatistics.js\nimport React, { useEffect, useState } from 'react';\nimport { fetchStatistics } from '../api/TransactionsApi'; // Import the API function\nimport './TransactionsStatistics.css';\n\nconst TransactionsStatistics = ({ month }) => {\n    const [statistics, setStatistics] = useState({\n        totalSaleAmount: 0,\n        totalSoldItems: 0,\n        totalNotSoldItems: 0\n    });\n\n    useEffect(() => {\n        const fetchAndSetStatistics = async () => {\n            if (month) {\n                try {\n                    const monthNumber = new Date(Date.parse(month + \" 1, 2021\")).getMonth() + 1;\n                    console.log(\"Fetching statistics for month number:\", monthNumber);\n\n                    const data = await fetchStatistics(monthNumber); // Use the API function\n                    console.log(\"Fetched statistics:\", data);\n\n                    // Update state with fetched data\n                    setStatistics({\n                        totalSaleAmount: data.totalSaleAmount,\n                        totalSoldItems: data.totalSoldItems,\n                        totalNotSoldItems: data.totalNotSoldItems\n                    });\n                } catch (error) {\n                    console.error(\"Error fetching statistics:\", error);\n                }\n            }\n        };\n\n        fetchAndSetStatistics();\n    }, [month]);\n\n    return (\n        <div className=\"statistics-container\">\n            <h3>Transaction Statistics for {month || 'Selected Month'}</h3>\n            <div className=\"statistics-details\">\n                <p><strong>Total Sale Amount:</strong> ${statistics.totalSaleAmount.toFixed(2)}</p>\n                <p><strong>Total Sold Items:</strong> {statistics.totalSoldItems}</p>\n                <p><strong>Total Not Sold Items:</strong> {statistics.totalNotSoldItems}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionsStatistics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}