{"ast":null,"code":"var _jsxFileName = \"/home/stlt105/my-transaction-dashboard/frontend/src/components/TransactionsStatistics.js\",\n  _s = $RefreshSig$();\n// components/TransactionsStatistics.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Import axios for making requests\nimport './TransactionsStatistics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsStatistics = ({\n  month\n}) => {\n  _s();\n  const [statistics, setStatistics] = useState({\n    totalSaleAmount: 0,\n    totalSoldItems: 0,\n    totalNotSoldItems: 0\n  });\n  const fetchStatistics = async monthNumber => {\n    try {\n      // Adjust the API endpoint to match the defined route\n      const response = await axios.get(`/api/transactions/statistics?month=${monthNumber}`);\n      return response.data; // Return the response data for further processing\n    } catch (error) {\n      console.error(\"Error fetching statistics:\", error);\n      throw error; // Rethrow the error for further handling\n    }\n  };\n  useEffect(() => {\n    const fetchAndSetStatistics = async () => {\n      if (month) {\n        // Check if a month is selected\n        try {\n          // Convert month name to number\n          const monthNumber = new Date(Date.parse(month + \" 1, 2021\")).getMonth() + 1; // +1 to convert to 1-based index\n\n          // Log the month being fetched for debugging\n          console.log(\"Fetching statistics for month number:\", monthNumber);\n          const data = await fetchStatistics(monthNumber);\n          console.log(\"Fetched statistics:\", data); // Log the fetched statistics\n\n          // Update state with fetched data\n          setStatistics({\n            totalSaleAmount: data.totalSaleAmount,\n            totalSoldItems: data.totalSoldItems,\n            totalNotSoldItems: data.totalNotSoldItems\n          });\n        } catch (error) {\n          console.error(\"Error fetching statistics:\", error);\n        }\n      }\n    };\n    fetchAndSetStatistics();\n  }, [month]); // Fetch statistics whenever month changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Transaction Statistics for \", month || 'Selected Month']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Sale Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this), \" $\", statistics.totalSaleAmount.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Sold Items:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this), \" \", statistics.totalSoldItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Not Sold Items:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this), \" \", statistics.totalNotSoldItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionsStatistics, \"dXYl5I5XdApbDTz4/MEqRjO5EYk=\");\n_c = TransactionsStatistics;\nexport default TransactionsStatistics;\nvar _c;\n$RefreshReg$(_c, \"TransactionsStatistics\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TransactionsStatistics","month","_s","statistics","setStatistics","totalSaleAmount","totalSoldItems","totalNotSoldItems","fetchStatistics","monthNumber","response","get","data","error","console","fetchAndSetStatistics","Date","parse","getMonth","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/home/stlt105/my-transaction-dashboard/frontend/src/components/TransactionsStatistics.js"],"sourcesContent":["// components/TransactionsStatistics.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Import axios for making requests\nimport './TransactionsStatistics.css';\n\nconst TransactionsStatistics = ({ month }) => {\n    const [statistics, setStatistics] = useState({\n        totalSaleAmount: 0,\n        totalSoldItems: 0,\n        totalNotSoldItems: 0\n    });\n\n    const fetchStatistics = async (monthNumber) => {\n        try {\n            // Adjust the API endpoint to match the defined route\n            const response = await axios.get(`/api/transactions/statistics?month=${monthNumber}`);\n            return response.data; // Return the response data for further processing\n        } catch (error) {\n            console.error(\"Error fetching statistics:\", error);\n            throw error; // Rethrow the error for further handling\n        }\n    };\n\n    useEffect(() => {\n        const fetchAndSetStatistics = async () => {\n            if (month) { // Check if a month is selected\n                try {\n                    // Convert month name to number\n                    const monthNumber = new Date(Date.parse(month + \" 1, 2021\")).getMonth() + 1; // +1 to convert to 1-based index\n\n                    // Log the month being fetched for debugging\n                    console.log(\"Fetching statistics for month number:\", monthNumber);\n\n                    const data = await fetchStatistics(monthNumber);\n                    console.log(\"Fetched statistics:\", data); // Log the fetched statistics\n\n                    // Update state with fetched data\n                    setStatistics({\n                        totalSaleAmount: data.totalSaleAmount,\n                        totalSoldItems: data.totalSoldItems,\n                        totalNotSoldItems: data.totalNotSoldItems\n                    });\n                } catch (error) {\n                    console.error(\"Error fetching statistics:\", error);\n                }\n            }\n        };\n\n        fetchAndSetStatistics();\n    }, [month]); // Fetch statistics whenever month changes\n\n    return (\n        <div className=\"statistics-box\">\n            <h3>Transaction Statistics for {month || 'Selected Month'}</h3>\n            <p><strong>Total Sale Amount:</strong> ${statistics.totalSaleAmount.toFixed(2)}</p>\n            <p><strong>Total Sold Items:</strong> {statistics.totalSoldItems}</p>\n            <p><strong>Total Not Sold Items:</strong> {statistics.totalNotSoldItems}</p>\n        </div>\n    );\n};\n\nexport default TransactionsStatistics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}